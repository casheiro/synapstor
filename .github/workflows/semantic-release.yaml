name: Semantic Release Job

on:
  workflow_call:
    inputs:
      dry_run:
        type: boolean
        default: false
        description: "Executar em modo simulação"
    outputs:
      version:
        description: "Nova versão gerada"
        value: ${{ jobs.semrel.outputs.version }}
      changed:
        description: "Indica se houve mudança na versão"
        value: ${{ jobs.semrel.outputs.changed }}

jobs:
  semrel:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
      changed: ${{ steps.release.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}

      # Modo dry-run (para PRs)
      - name: Simular versionamento
        if: inputs.dry_run
        id: preview
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          push: false
          commit: false
          tag: false
          vcs_release: false
          force: "patch"

      - name: Capturar versão simulada
        if: inputs.dry_run
        run: |
          echo "version=${{ steps.preview.outputs.version }}" >> $GITHUB_OUTPUT
          echo "changed=${{ steps.preview.outputs.released }}" >> $GITHUB_OUTPUT
          echo "Preview da versão: ${{ steps.preview.outputs.version }}"

      # Modo real (para main)
      - name: Executar versionamento
        if: ${{!inputs.dry_run}}
        id: release
        uses: python-semantic-release/python-semantic-release@v9.21.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          git_committer_name: "github-actions"
          git_committer_email: "github-actions@github.com"

      - name: Capturar versão real
        if: ${{!inputs.dry_run}}
        run: |
          echo "version=${{ steps.release.outputs.version }}" >> $GITHUB_OUTPUT
          echo "changed=${{ steps.release.outputs.released }}" >> $GITHUB_OUTPUT
