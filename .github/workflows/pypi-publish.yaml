name: PyPI Publish Job

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        default: "testpypi"
        description: "Ambiente para publicação (testpypi ou pypi)"
      version:
        type: string
        required: false
        description: "Versão para publicação (não usado mais, apenas mantido por compatibilidade)"
    secrets:
      TEST_PYPI_API_TOKEN:
        required: true
      PYPI_API_TOKEN:
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Instalar dependências
        run: pip install build twine

      # Mostrar versão atual
      - name: Verificar versão atual
        run: |
          echo "Versão atual no pyproject.toml:"
          grep "^version =" pyproject.toml

          if [ -f "src/synapstor/__init__.py" ]; then
            echo "Versão atual no __init__.py:"
            grep "__version__ =" src/synapstor/__init__.py
          fi

      - name: Construir pacote
        run: python -m build

      - name: Verificar arquivos gerados
        run: |
          echo "Arquivos na pasta dist:"
          ls -la dist/

      - name: Publicar no TestPyPI
        if: inputs.environment == 'testpypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          skip-existing: true

      - name: Publicar no PyPI
        if: inputs.environment == 'pypi'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
