# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: PyPI Publish

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Escolha o ambiente de publicação'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi
  push:
    # Pattern matched against refs/tags
    tags:
      - 'v*'           # Push events to every version tag

env:
  UV_PUBLISH_TOKEN: '${{ secrets.PYPI_API_TOKEN }}'
  UV_PUBLISH_TEST_TOKEN: '${{ secrets.TEST_PYPI_API_TOKEN }}'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    - name: Build package
      run: |
        python -m build
        # Validar o pacote
        twine check dist/*

    - name: Publish to TestPyPI
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'testpypi'
      run: |
        python -m twine upload --repository testpypi dist/* --verbose -u __token__ -p ${{ secrets.TEST_PYPI_API_TOKEN }}

    - name: Publish to PyPI
      if: (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'pypi') || github.event_name == 'push'
      run: |
        python -m twine upload dist/* --verbose -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}
