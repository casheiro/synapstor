[project]
name = "synapstor"
version = "0.1.4"
description = "An unofficial evolution of mcp-server-qdrant - Client and server for semantic storage and search"
readme = "README.pypi.md"
requires-python = ">=3.10"
license = "MIT"
license-files = ["LICENSE"]
authors = [{ name = "Malindentado", email = "contato@casheiro.com.br" }]
dependencies = [
    "mcp[cli]>=1.3.0",
    "dotenv",
    "qdrant-client>=1.3.1",
    "fastembed>=0.6.1",
    "sentence-transformers>=2.2.2",
    "Unidecode>=1.3.0",
    "docopt>=0.6.0",
    "fastapi>=0.85.1",
    "uvicorn>=0.19.0",
    "langchain>=0.0.200",
    "pydantic-settings>=2.0.0",
    "psutil>=6.0.0",
    "pytest>=7.4.3",
]

[project.urls]
"Homepage" = "https://github.com/casheiro/synapstor"
"Bug Tracker" = "https://github.com/casheiro/synapstor/issues"

[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"

[project.scripts]
synapstor-indexer = "synapstor.tools.indexer:command_line_runner"
synapstor-server = "cli.server:main"
synapstor-reindex = "cli.reindex:main"
synapstor-setup = "cli.setup:main"
synapstor-config = "cli.config:main"
synapstor-ctl = "cli.ctl:main"

[tool.setuptools]
packages = ["synapstor", "cli"]
package-dir = { "synapstor" = "src/synapstor" }

[project.optional-dependencies]
fastembed = ["fastembed>=0.6.1"]
dev = [
    "pre-commit",
    "black",
    "isort",
    "flake8",
    "mypy"
]
test = [
    "pytest>=7.4.3",
    "pytest-cov>=2.12.1",
    "pytest-asyncio>=0.21.0"
]
all = [
    "fastembed>=0.6.1",
    "pre-commit",
    "black",
    "isort",
    "flake8",
    "mypy",
    "pytest>=7.4.3",
    "pytest-cov>=2.12.1",
    "pytest-asyncio>=0.21.0"
]

[tool.semantic_release]
version_variable = [
    "pyproject.toml:version",
    "src/synapstor/__init__.py:__version__"
]
version_pattern = [
    "README.md:versão-{version}-blue",
    "README.pypi.md:Version {version} |"
]
branch = "main"
prerelease_branches = ["feature/*", "dev", "develop"]
major_on_zero = false  # Incrementa MAJOR mesmo em versões 0.x.x
check_build_status = false
upload_to_pypi = false  # O PyPI será gerenciado pelo workflow de PyPI
upload_to_release = true
build_command = "python -m build"
commit_message = "chore(release): {version} [skip ci]"
changelog_file = "CHANGELOG.md"
commit_parser = "angular"
